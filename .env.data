#
#  ARCHIVO DE CONFIGURACION PARA LA LECTURA DE DATOS
#

#  caracter separador para las listas DENTRO de este mismo documento
SEPARATOR=,

#  ruta relativa donde se encuentra el archivo de datos a partir de app.py
FILE_PATH=files
#  nombre del archivo de datos
FILE_NAME=data.csv
# size en MB del bloque de lectura de datos
MB_BLOCKS_SIZE=1
#  tipo de codificacion del archivo de datos
FILE_ENCODING=UTF-8
#  guardar los datos procesados en cache?(otro archivo)
DATA_CACHE=True
#  nombre del archivo de cache
#  se guardara en una carperta llamada cache la misma ruta que el archivo de datos
CACHE_FILE_NAME=data_cache.csv
#  caracter que sirve como separador del valor de cada uno de los campos
#  utilizar la palabra TAB,SPACE para indicar que el separador es un tabulador
#  o espacio en blanco respectivamente
DATA_SEPARATOR=,
#  indica si el archivo conserva el mismo orden de datos en cada registro
#  ejemplo un CSV y el numero de datos por registro deberia coincidir con el numero de columnas
#  si es falso se asumen que en cada registro el orden de los datos no es correspondiente
#  al de las columnas y que no todas las columnas deben tener datos
#  ejemplo un registro dentro del mismo archivo podria tener la siguiente estructura
#  {"nombre":"Emilton","apellido":"Mendoza ojeda", "sexo":"M"}
#  y esta otra...
#  {"apellido":"Garcia Marquez","nombre":"Gabriel Jose de la Concordancia"} 
FILE_TABULATED=True
#  habilita la ejecucion de scripts que afectaran al registro cuando aun es una linea de texto
AFFECT_RAW_RECORD=True
#  ruta donde se encuentran los scripts
SCRIPTS_PATH=scripts/data
#  lista de script que modificaran el registo
#  todos los script deben recibir un string y retornar un string
SCRIPTS=add_column

#  los nombre de las columnas/headers estan dentro del archivo?
HEADERS_IN_FIRST_LINE=True
#  usar nombre de columnas/headers propios?
USE_CUSTOM_HEADER=True
#  listado separado por comas de los nombres de columnas/headers personalizadas
CUSTOM_HEADER=site,item_id,id
#  aplicar conversion de datos a cada uno de los campos del registro
APPLY_TYPES=True
#  listado separado por comas de los tipos de datos de cada columna
#  los tipos de datos validos son int,str,float,bool 
HEADERS_TYPE=str,int,str
#  leer el archivo por numero de caracteres donde cada numero es la cantidad
#  de caracteres que debe leer para cada campo
USE_LONG_CHAR_SEPARATOR=False
#  lista de cantidad de caracteres los campos
LONG_CHAR_SEPARATOR=7,4,3,1
#  ignorar el registro actual y pasar al siguiente si se encuentra una inconsistencia?
IGNORE_ERRORS_DATA=True

#  en caso de no ser un archivo tabulado indicar el formato del campo mediante expresion H V
#  ejemplo: H:V para registros de tipo Header:Value,Header:Value,Header:Value.....
#           nombre:Emilton,apellido:Mendoza ojeda,sexo:M
#  ejemplo2: <H>V</H> para registros de tipo <Header>Value</Header><Header>Value</Header><Header>Value</Header>.....
#           <nombre>Emilton</nombre><apellido>Mendoza ojeda</apellido><sexo>M</sexo>
FIELD_TEMPLATE=H:V
#ignora n caracteres al inicio del registro en crudo
CLIP_START=1
#ignora n caracteres al final del registro en crudo
CLIP_END=1

